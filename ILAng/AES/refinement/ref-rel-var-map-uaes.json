{
  "state mapping": {  
    "aes_address"        : "RTL.aes_reg_opaddr_i.reg_out",
    "aes_length"         : "RTL.aes_reg_oplen_i.reg_out",
    "aes_counter"        : "RTL.aes_reg_ctr_i.reg_out",
    "aes_key"            : "RTL.aes_reg_key0_i.reg_out",
    "aes_status"         : "RTL.aes_reg_state",
    "XRAM"               : {
      "wen"   : "(RTL.xram_wr & RTL.xram_stb) @ 0",
      "waddr" : "RTL.xram_addr @ 0",
      "wdata" : "RTL.xram_data_out @ 0",
      "ren"   : " (~RTL.xram_wr & RTL.xram_stb) @ 0",
      "raddr" : "RTL.xram_addr @ 0",
      "rdata" : "RTL.xram_data_in @(RTL.xram_ack)"
    },
    "outdata"            : "RTL.data_out_reg",

    "rd_data"            : "RTL.mem_data_buf",
    "enc_data"           : "RTL.encrypted_data_buf",
    "byte_cnt"           : "RTL.byte_counter",
    "blk_cnt"            : "RTL.block_counter"
  },
  "input mapping": {
    "cmd"    : "RTL.wr == 1 ? 2'd2 : 2'd1",
    "cmdaddr": "RTL.addr",
    "cmddata": "RTL.data_in"
  },
  "additional mapping" :["RTL.aes_reg_state == 2 |-> RTL.xram_ack == 0"],
  "assumptions" : ["(RTL.aes_reg_state == 2) |-> (RTL.aes_time_enough == 1)"],
  "rtl-interface-connection" : {
    "CLOCK" : "clk",
    "RESET" : "rst"
  },
  "functions":{ // for uninterpreted functions 
    "aes128":[
      {
        "result":"RTL.aes_128_i.out",
        "arg":["RTL.uaes_ctr", "RTL.aes_curr_key"] }
      ]
  }
}



